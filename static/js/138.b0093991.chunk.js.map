{"version":3,"file":"static/js/138.b0093991.chunk.js","mappings":"kRAgIA,UAzGqB,WAAO,IAAD,EACjBA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,UAACH,EAASI,aAAV,QAAmB,WAiBrD,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAESC,EAAAA,EAAAA,IAAgBZ,GAFzB,OAERa,EAFQ,OAGdT,EAASS,GAHK,gDAKdC,QAAQC,MAAM,uBAAd,MALc,yDAAH,qDASfJ,GACD,GAAE,CAACX,KAKF,SAAC,IAAD,WACE,UAAC,IAAD,YACE,SAAC,KAAD,CAAMgB,GAAIT,EAAoBU,QAA9B,UACE,SAAC,IAAD,CACEC,QAAQ,YACRC,MAAO,CACLC,aAAc,GACdC,gBAAiB,SACjBC,MAAO,SALX,SAOC,YAKH,UAAC,KAAD,YACE,gBACEC,IACEpB,EAAMqB,YAAN,0CACuCrB,EAAMqB,aACzC,wFAENC,IAAKtB,EAAMuB,MACXC,QAAQ,OACRC,MAAO,IACPC,OAAQ,OAEV,4BACE,0BACG1B,EAAMuB,MACNvB,EAAM2B,cAAN,YAA2B3B,EAAM2B,aAAaC,MAAM,EAAG,GAAvD,SAEH,UAAC,KAAD,WAAW,cACG,IACX5B,EAAM6B,cACL,SAAC,KAAD,CAAOV,OAAOW,EAAAA,EAAAA,GAAc9B,EAAM6B,cAAlC,SACGE,KAAKC,MAA2B,GAArBhC,EAAM6B,iBAGpB,uBAAG,uBAGP,wBAAI,cACJ,uBAAI7B,EAAMiC,YACV,wBAAI,YACJ,SAAC,KAAD,UACGjC,EAAMkC,QACLlC,EAAMkC,OAAOC,KAAI,gBAAGtC,EAAH,EAAGA,GAAIuC,EAAP,EAAOA,KAAP,OAAkB,wBAAcA,GAALvC,EAA3B,aAIzB,0BACE,UAAC,KAAD,YACE,yBACE,SAAC,KAAD,CAASgB,GAAG,OAAZ,UACE,SAAC,IAAD,CACEE,QAAQ,YACRC,MAAO,CAAEE,gBAAiB,UAAWC,MAAO,SAF9C,SAGC,cAKL,yBACE,SAAC,KAAD,CAASN,GAAG,UAAZ,UACE,SAAC,IAAD,CACEE,QAAQ,YACRC,MAAO,CAAEE,gBAAiB,UAAWC,MAAO,SAF9C,SAGC,sBAOT,SAAC,EAAAkB,SAAD,WACE,SAAC,KAAD,UAKT,C","sources":["components/pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { Button } from '@mui/material';\nimport {\n  DivContainer,\n  Section,\n} from 'components/pages/HomePage/HomePage.styled';\nimport { getScoreColor } from 'helpers/helpers';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { getMovieDetails } from 'services/tmdbAPI';\nimport {\n  ListGenres,\n  ListInform,\n  MovieContainer,\n  Score,\n  ScoreText,\n} from './MovieDetails.styled';\n\nconst MovieDateils = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState({});\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state ?? '/movies');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await getMovieDetails(id);\n        setMovie(response);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, [id]);\n\n\n\n  return (\n    <Section>\n      <DivContainer>\n        <Link to={backLinkLocationRef.current}>\n          <Button\n            variant=\"contained\"\n            style={{\n              marginBottom: 20,\n              backgroundColor: 'orange',\n              color: 'black',\n            }}\n          >\n            Back\n          </Button>\n        </Link>\n\n        <MovieContainer>\n          <img\n            src={\n              movie.poster_path\n                ? `https://image.tmdb.org/t/p/w200/${movie.poster_path}`\n                : 'https://www.pulsecarshalton.co.uk/wp-content/uploads/2016/08/jk-placeholder-image.jpg'\n            }\n            alt={movie.title}\n            loading=\"lazy\"\n            width={600}\n            height={600}\n          />\n          <div>\n            <h2>\n              {movie.title}\n              {movie.release_date && ` (${movie.release_date.slice(0, 4)})`}\n            </h2>\n            <ScoreText>\n              User Score:{' '}\n              {movie.vote_average ? (\n                <Score color={getScoreColor(movie.vote_average)}>\n                  {Math.round(movie.vote_average * 10)}\n                </Score>\n              ) : (\n                <p>No information</p>\n              )}\n            </ScoreText>\n            <h3>Overview</h3>\n            <p>{movie.overview}</p>\n            <h3>Genres</h3>\n            <ListGenres>\n              {movie.genres &&\n                movie.genres.map(({ id, name }) => <li key={id}>{name}</li>)}\n            </ListGenres>\n          </div>\n        </MovieContainer>\n        <div>\n          <ListInform>\n            <li>\n              <NavLink to=\"cast\">\n                <Button\n                  variant=\"contained\"\n                  style={{ backgroundColor: '#b63810', color: 'white' }}\n                >\n                  Cast\n                </Button>\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"reviews\">\n                <Button\n                  variant=\"contained\"\n                  style={{ backgroundColor: '#b63810', color: 'white' }}\n                >\n                  Reviews\n                </Button>\n              </NavLink>\n            </li>\n          </ListInform>\n        </div>\n        <Suspense>\n          <Outlet />\n        </Suspense>\n      </DivContainer>\n    </Section>\n  );\n};\n\nexport default MovieDateils;\n"],"names":["id","useParams","useState","movie","setMovie","location","useLocation","backLinkLocationRef","useRef","state","useEffect","fetchData","getMovieDetails","response","console","error","to","current","variant","style","marginBottom","backgroundColor","color","src","poster_path","alt","title","loading","width","height","release_date","slice","vote_average","getScoreColor","Math","round","overview","genres","map","name","Suspense"],"sourceRoot":""}